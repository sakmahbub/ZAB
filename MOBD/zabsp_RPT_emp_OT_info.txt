USE [ZABDB]
GO
/****** Object:  StoredProcedure [dbo].[zabsp_RPT_emp_OT_info]    Script Date: 9/23/2019 3:13:08 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- EXEC zabsp_RPT_emp_OT_info 100000,'ACCOUNTS','ACCOUNTS','ACCOUNTS','2019-07-15','2019-08-30','',''

ALTER PROC [dbo].[zabsp_RPT_emp_OT_info] 
					@zid INT
				   ,@dept VARCHAR(50)
				   ,@sec VARCHAR(50)
				   ,@subsec VARCHAR(50)
				   ,@fdate DATETIME
				   ,@tdate DATETIME
				   ,@fstaff VARCHAR(50)
				   ,@tstaff VARCHAR(50)
				   
			
		   			
--WITH ENCRYPTION 
AS
--SET NOCOUNT ON
--BEGIN TRAN @user
DECLARE						
							 @zorg VARCHAR(250)
							,@madd VARCHAR(250)
							,@name VARCHAR(50)
							,@fhdothours DECIMAL(20,2)
							,@othours DECIMAL(20,2)
							,@hdothours DECIMAL(20,2)
							,@rlvwrkhours DECIMAL(20,2)
						    ,@staff VARCHAR(150)



DECLARE @table TABLE( zid INT
						    ,zorg VARCHAR(250)
							,madd VARCHAR(250)
							,xname VARCHAR(50)
							,xfhdothours DECIMAL(20,2)
							,xothours DECIMAL(20,2)
							,xhdothours DECIMAL(20,2)
							,xrlvwrkhours DECIMAL(20,2)
						    ,xstaff VARCHAR(150)
					
						 )




SELECT @zorg=zorg,@madd = xmadd FROM zbusiness WHERE zid=@zid

---------------------Attendance table process-----------------------

	DECLARE overtime_cursor CURSOR FORWARD_ONLY FOR 
	select p.xstaff from pdmst p
	WHERE p.zid=@zid
	AND p.xdeptname >= CASE WHEN @dept = '' THEN '' ELSE @dept END
	AND p.xdeptname <= CASE WHEN @dept = '' THEN 'zzz' ELSE @dept END
	AND p.xsection >= CASE WHEN @sec = '' THEN '' ELSE @sec END
	AND p.xsection <= CASE WHEN @sec = '' THEN 'zzz' ELSE @sec END
	AND p.xsubsector >= CASE WHEN @subsec = '' THEN '' ELSE @subsec END
	AND p.xsubsector <= CASE WHEN @subsec = '' THEN 'zzz' ELSE @subsec END
	AND p.xdatejoin>= CASE WHEN @fdate = '' AND @tdate = '' THEN '' ELSE @fdate END
	AND p.xstaff<= CASE WHEN @fdate = '' AND @tdate = '' THEN 'zzz' ELSE @tdate END
	AND p.xstaff>= CASE WHEN @fstaff = '' AND @tstaff = '' THEN '' ELSE @fstaff END
	AND p.xstaff<= CASE WHEN @fstaff = '' AND @tstaff = '' THEN 'zzz' ELSE @tstaff END
	



    OPEN overtime_cursor
    FETCH FROM overtime_cursor INTO  @staff
	WHILE @@FETCH_STATUS = 0
	BEGIN




	
	/*********************************** OVERTIME TRANSACTION ****************************************************************************/
	----------------------------PD Transaction Detail for Festival Holiday Overtime--------------------------------
	
								/***SUMMATION OF WORKHOUR AND OVERTIMEHOUR IN FESTIVAL HOLIDAY WHEN APPLICABLE****************/
		select  @fhdothours=ISNULL(SUM(ISNULL(DATEDIFF(MINUTE, '00:00:00', a.xothours),0)+ISNULL(DATEDIFF(MINUTE, '00:00:00', a.xworktime),0)),0)/60.00  from pdattview a join pdlvreplacetrn l on a.zid=l.zid and a.xstaff=l.xstaff and cast(a.xdate as date)=cast(l.xdate as date)
									WHERE a.zid=@zid AND a.xstaff=@staff AND a.xdate between @fdate AND @tdate and l.xtype='FESTIVAL' and l.xsign=1
									and a.xyearperdate in (select xyearperdate from pdcalenderdetail where zid=@zid and cast(xdate as date) between @fdate AND @tdate AND xtypeholiday='Festival Holiday')
            ----------------------------END PD Transaction Detail for Festival Holiday Overtime--------------------------------

	----------------------------PD Transaction Detail for Normal Overtime--------------------------------
	select @othours=SUM(DATEDIFF(MINUTE, '00:00:00', xothours))/60.00  from pdattview WHERE zid=@zid AND xstaff=@staff AND xdate between @fdate AND @tdate
							and xyearperdate not in (select xyearperdate from pdcalenderdetail where zid=@zid and cast(xdate as date) between @fdate AND @tdate)
	
	----------------------------End Of PD Transaction Detail for Normal Overtime--------------------------------
	



	
	----------------------------PD Transaction Detail for Holiday Overtime--------------------------------
	
								/***SUMMATION OF WORKHOUR ADN OVERTIMEHOUR IN HOLIDAY WHEN APPLICABLE****************/
	select  @hdothours=ISNULL(SUM(ISNULL(DATEDIFF(MINUTE, '00:00:00', a.xothours),0)+ISNULL(DATEDIFF(MINUTE, '00:00:00', a.xworktime),0)),0)/60.00  from pdattview a join pdlvreplacetrn l on a.zid=l.zid and a.xstaff=l.xstaff and cast(a.xdate as date)=cast(l.xdate as date)
								WHERE a.zid=@zid AND a.xstaff=@staff AND a.xdate between @fdate AND @tdate and l.xtype='OVERTIME' and l.xsign=1
								and a.xyearperdate in (select xyearperdate from pdcalenderdetail where zid=@zid and cast(xdate as date) between @fdate AND @tdate AND xtypeholiday IN ('Day Off','Holiday','Festival Holiday'))
	
							/***OVERTIMEHOUR CALCULATE ON REPLACEMENT DUTY****************/
	select @rlvwrkhours=ISNULL(SUM(DATEDIFF(MINUTE, '00:00:00', a.xothours)),0)/60.00  from pdattview a join pdlvreplacetrn l on a.zid=l.zid and a.xstaff=l.xstaff and cast(a.xdate as date)=cast(l.xdate as date)
							WHERE a.zid=@zid AND a.xstaff=@staff AND a.xdate between @fdate AND @tdate and l.xtype='REPLACEMENT' and l.xsign=1
							and a.xyearperdate in (select xyearperdate from pdcalenderdetail where zid=@zid and cast(xdate as date) between @fdate AND @tdate AND xtypeholiday IN ('Day Off','Holiday'))
	SET @hdothours=ISNULL(@hdothours,0)+ISNULL(@rlvwrkhours,0)
	

	----------------------------End Of PD Transaction Detail for Holiday Overtime--------------------------------
	/*********************************** END OF OVERTIME TRANSACTION ****************************************************************************/
	
	
	INSERT INTO @table(zid,zorg,madd,xname,xfhdothours,xothours,xhdothours,xrlvwrkhours,xstaff)
					values(@zid,@zorg,@madd,@name,@fhdothours,@othours,@hdothours,@rlvwrkhours,@staff)




  	FETCH NEXT FROM overtime_cursor INTO @staff
	END
	CLOSE overtime_cursor
	DEALLOCATE overtime_cursor
	
	SELECT zid,zorg,madd,xname,xfhdothours,xothours,xhdothours,xrlvwrkhours,xstaff FROM @table
	
SET NOCOUNT OFF
